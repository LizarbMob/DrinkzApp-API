#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DrinkzApp.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DrinkzApp")]
	public partial class DrinkzAppBDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertDrink(Drink instance);
    partial void UpdateDrink(Drink instance);
    partial void DeleteDrink(Drink instance);
    partial void InsertIngredient(Ingredient instance);
    partial void UpdateIngredient(Ingredient instance);
    partial void DeleteIngredient(Ingredient instance);
    partial void InsertLike(Like instance);
    partial void UpdateLike(Like instance);
    partial void DeleteLike(Like instance);
    partial void InsertPicture(Picture instance);
    partial void UpdatePicture(Picture instance);
    partial void DeletePicture(Picture instance);
    partial void InsertPreference(Preference instance);
    partial void UpdatePreference(Preference instance);
    partial void DeletePreference(Preference instance);
    partial void InsertProfile(Profile instance);
    partial void UpdateProfile(Profile instance);
    partial void DeleteProfile(Profile instance);
    partial void InsertShare(Share instance);
    partial void UpdateShare(Share instance);
    partial void DeleteShare(Share instance);
    #endregion
		
		public DrinkzAppBDDataContext() : 
				base(global::DrinkzApp.Data.Properties.Settings.Default.DrinkzAppConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DrinkzAppBDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DrinkzAppBDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DrinkzAppBDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DrinkzAppBDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Drink> Drinks
		{
			get
			{
				return this.GetTable<Drink>();
			}
		}
		
		public System.Data.Linq.Table<Ingredient> Ingredients
		{
			get
			{
				return this.GetTable<Ingredient>();
			}
		}
		
		public System.Data.Linq.Table<Like> Likes
		{
			get
			{
				return this.GetTable<Like>();
			}
		}
		
		public System.Data.Linq.Table<Picture> Pictures
		{
			get
			{
				return this.GetTable<Picture>();
			}
		}
		
		public System.Data.Linq.Table<Preference> Preferences
		{
			get
			{
				return this.GetTable<Preference>();
			}
		}
		
		public System.Data.Linq.Table<Profile> Profiles
		{
			get
			{
				return this.GetTable<Profile>();
			}
		}
		
		public System.Data.Linq.Table<Share> Shares
		{
			get
			{
				return this.GetTable<Share>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_ADDRESS;
		
		private string _ZIP_CODE;
		
		private string _STREET;
		
		private string _STATE;
		
		private int _FK_PROFILE;
		
		private EntityRef<Profile> _Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_ADDRESSChanging(int value);
    partial void OnPK_ADDRESSChanged();
    partial void OnZIP_CODEChanging(string value);
    partial void OnZIP_CODEChanged();
    partial void OnSTREETChanging(string value);
    partial void OnSTREETChanged();
    partial void OnSTATEChanging(string value);
    partial void OnSTATEChanged();
    partial void OnFK_PROFILEChanging(int value);
    partial void OnFK_PROFILEChanged();
    #endregion
		
		public Address()
		{
			this._Profile = default(EntityRef<Profile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_ADDRESS", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_ADDRESS
		{
			get
			{
				return this._PK_ADDRESS;
			}
			set
			{
				if ((this._PK_ADDRESS != value))
				{
					this.OnPK_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._PK_ADDRESS = value;
					this.SendPropertyChanged("PK_ADDRESS");
					this.OnPK_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZIP_CODE", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ZIP_CODE
		{
			get
			{
				return this._ZIP_CODE;
			}
			set
			{
				if ((this._ZIP_CODE != value))
				{
					this.OnZIP_CODEChanging(value);
					this.SendPropertyChanging();
					this._ZIP_CODE = value;
					this.SendPropertyChanged("ZIP_CODE");
					this.OnZIP_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STREET", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string STREET
		{
			get
			{
				return this._STREET;
			}
			set
			{
				if ((this._STREET != value))
				{
					this.OnSTREETChanging(value);
					this.SendPropertyChanging();
					this._STREET = value;
					this.SendPropertyChanged("STREET");
					this.OnSTREETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATE", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string STATE
		{
			get
			{
				return this._STATE;
			}
			set
			{
				if ((this._STATE != value))
				{
					this.OnSTATEChanging(value);
					this.SendPropertyChanging();
					this._STATE = value;
					this.SendPropertyChanged("STATE");
					this.OnSTATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_PROFILE", DbType="Int NOT NULL")]
		public int FK_PROFILE
		{
			get
			{
				return this._FK_PROFILE;
			}
			set
			{
				if ((this._FK_PROFILE != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_PROFILEChanging(value);
					this.SendPropertyChanging();
					this._FK_PROFILE = value;
					this.SendPropertyChanged("FK_PROFILE");
					this.OnFK_PROFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Address", Storage="_Profile", ThisKey="FK_PROFILE", OtherKey="PK_PROFILE", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._FK_PROFILE = value.PK_PROFILE;
					}
					else
					{
						this._FK_PROFILE = default(int);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_CATEGORY;
		
		private string _DESCRIPTION;
		
		private string _UF;
		
		private string _REGION;
		
		private EntitySet<Drink> _Drinks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_CATEGORYChanging(int value);
    partial void OnPK_CATEGORYChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnUFChanging(string value);
    partial void OnUFChanged();
    partial void OnREGIONChanging(string value);
    partial void OnREGIONChanged();
    #endregion
		
		public Category()
		{
			this._Drinks = new EntitySet<Drink>(new Action<Drink>(this.attach_Drinks), new Action<Drink>(this.detach_Drinks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_CATEGORY", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_CATEGORY
		{
			get
			{
				return this._PK_CATEGORY;
			}
			set
			{
				if ((this._PK_CATEGORY != value))
				{
					this.OnPK_CATEGORYChanging(value);
					this.SendPropertyChanging();
					this._PK_CATEGORY = value;
					this.SendPropertyChanged("PK_CATEGORY");
					this.OnPK_CATEGORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UF", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string UF
		{
			get
			{
				return this._UF;
			}
			set
			{
				if ((this._UF != value))
				{
					this.OnUFChanging(value);
					this.SendPropertyChanging();
					this._UF = value;
					this.SendPropertyChanged("UF");
					this.OnUFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this.OnREGIONChanging(value);
					this.SendPropertyChanging();
					this._REGION = value;
					this.SendPropertyChanged("REGION");
					this.OnREGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Drink", Storage="_Drinks", ThisKey="PK_CATEGORY", OtherKey="FK_CATEGORY")]
		public EntitySet<Drink> Drinks
		{
			get
			{
				return this._Drinks;
			}
			set
			{
				this._Drinks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Drinks(Drink entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Drinks(Drink entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Drink")]
	public partial class Drink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_DRINK;
		
		private string _NAME;
		
		private string _DESCRIPTION;
		
		private string _HOWTO;
		
		private int _LIKES;
		
		private int _FK_CATEGORY;
		
		private System.Nullable<int> _VIEWS;
		
		private System.DateTime _CREATION_DATE;
		
		private int _PK_PROFILE;
		
		private string _YOUTUBE_URL;
		
		private EntitySet<Ingredient> _Ingredients;
		
		private EntitySet<Like> _Likes1;
		
		private EntitySet<Picture> _Pictures;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Profile> _Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_DRINKChanging(int value);
    partial void OnPK_DRINKChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnHOWTOChanging(string value);
    partial void OnHOWTOChanged();
    partial void OnLIKESChanging(int value);
    partial void OnLIKESChanged();
    partial void OnFK_CATEGORYChanging(int value);
    partial void OnFK_CATEGORYChanged();
    partial void OnVIEWSChanging(System.Nullable<int> value);
    partial void OnVIEWSChanged();
    partial void OnCREATION_DATEChanging(System.DateTime value);
    partial void OnCREATION_DATEChanged();
    partial void OnPK_PROFILEChanging(int value);
    partial void OnPK_PROFILEChanged();
    partial void OnYOUTUBE_URLChanging(string value);
    partial void OnYOUTUBE_URLChanged();
    #endregion
		
		public Drink()
		{
			this._Ingredients = new EntitySet<Ingredient>(new Action<Ingredient>(this.attach_Ingredients), new Action<Ingredient>(this.detach_Ingredients));
			this._Likes1 = new EntitySet<Like>(new Action<Like>(this.attach_Likes1), new Action<Like>(this.detach_Likes1));
			this._Pictures = new EntitySet<Picture>(new Action<Picture>(this.attach_Pictures), new Action<Picture>(this.detach_Pictures));
			this._Category = default(EntityRef<Category>);
			this._Profile = default(EntityRef<Profile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_DRINK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PK_DRINK
		{
			get
			{
				return this._PK_DRINK;
			}
			set
			{
				if ((this._PK_DRINK != value))
				{
					this.OnPK_DRINKChanging(value);
					this.SendPropertyChanging();
					this._PK_DRINK = value;
					this.SendPropertyChanged("PK_DRINK");
					this.OnPK_DRINKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string DESCRIPTION
		{
			get
			{
				return this._DESCRIPTION;
			}
			set
			{
				if ((this._DESCRIPTION != value))
				{
					this.OnDESCRIPTIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPTION = value;
					this.SendPropertyChanged("DESCRIPTION");
					this.OnDESCRIPTIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOWTO", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string HOWTO
		{
			get
			{
				return this._HOWTO;
			}
			set
			{
				if ((this._HOWTO != value))
				{
					this.OnHOWTOChanging(value);
					this.SendPropertyChanging();
					this._HOWTO = value;
					this.SendPropertyChanged("HOWTO");
					this.OnHOWTOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIKES", DbType="Int NOT NULL")]
		public int LIKES
		{
			get
			{
				return this._LIKES;
			}
			set
			{
				if ((this._LIKES != value))
				{
					this.OnLIKESChanging(value);
					this.SendPropertyChanging();
					this._LIKES = value;
					this.SendPropertyChanged("LIKES");
					this.OnLIKESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_CATEGORY", DbType="Int NOT NULL")]
		public int FK_CATEGORY
		{
			get
			{
				return this._FK_CATEGORY;
			}
			set
			{
				if ((this._FK_CATEGORY != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_CATEGORYChanging(value);
					this.SendPropertyChanging();
					this._FK_CATEGORY = value;
					this.SendPropertyChanged("FK_CATEGORY");
					this.OnFK_CATEGORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIEWS", DbType="Int")]
		public System.Nullable<int> VIEWS
		{
			get
			{
				return this._VIEWS;
			}
			set
			{
				if ((this._VIEWS != value))
				{
					this.OnVIEWSChanging(value);
					this.SendPropertyChanging();
					this._VIEWS = value;
					this.SendPropertyChanged("VIEWS");
					this.OnVIEWSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATION_DATE", DbType="Date NOT NULL")]
		public System.DateTime CREATION_DATE
		{
			get
			{
				return this._CREATION_DATE;
			}
			set
			{
				if ((this._CREATION_DATE != value))
				{
					this.OnCREATION_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATION_DATE = value;
					this.SendPropertyChanged("CREATION_DATE");
					this.OnCREATION_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_PROFILE", DbType="Int NOT NULL")]
		public int PK_PROFILE
		{
			get
			{
				return this._PK_PROFILE;
			}
			set
			{
				if ((this._PK_PROFILE != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPK_PROFILEChanging(value);
					this.SendPropertyChanging();
					this._PK_PROFILE = value;
					this.SendPropertyChanged("PK_PROFILE");
					this.OnPK_PROFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YOUTUBE_URL", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string YOUTUBE_URL
		{
			get
			{
				return this._YOUTUBE_URL;
			}
			set
			{
				if ((this._YOUTUBE_URL != value))
				{
					this.OnYOUTUBE_URLChanging(value);
					this.SendPropertyChanging();
					this._YOUTUBE_URL = value;
					this.SendPropertyChanged("YOUTUBE_URL");
					this.OnYOUTUBE_URLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drink_Ingredient", Storage="_Ingredients", ThisKey="PK_DRINK", OtherKey="FK_DRINK")]
		public EntitySet<Ingredient> Ingredients
		{
			get
			{
				return this._Ingredients;
			}
			set
			{
				this._Ingredients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drink_Like", Storage="_Likes1", ThisKey="PK_DRINK", OtherKey="FK_DRINK")]
		public EntitySet<Like> Likes1
		{
			get
			{
				return this._Likes1;
			}
			set
			{
				this._Likes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drink_Picture", Storage="_Pictures", ThisKey="PK_DRINK", OtherKey="FK_DRINK")]
		public EntitySet<Picture> Pictures
		{
			get
			{
				return this._Pictures;
			}
			set
			{
				this._Pictures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Drink", Storage="_Category", ThisKey="FK_CATEGORY", OtherKey="PK_CATEGORY", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Drinks.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Drinks.Add(this);
						this._FK_CATEGORY = value.PK_CATEGORY;
					}
					else
					{
						this._FK_CATEGORY = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Drink", Storage="_Profile", ThisKey="PK_PROFILE", OtherKey="PK_PROFILE", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.Drinks.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.Drinks.Add(this);
						this._PK_PROFILE = value.PK_PROFILE;
					}
					else
					{
						this._PK_PROFILE = default(int);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ingredients(Ingredient entity)
		{
			this.SendPropertyChanging();
			entity.Drink = this;
		}
		
		private void detach_Ingredients(Ingredient entity)
		{
			this.SendPropertyChanging();
			entity.Drink = null;
		}
		
		private void attach_Likes1(Like entity)
		{
			this.SendPropertyChanging();
			entity.Drink = this;
		}
		
		private void detach_Likes1(Like entity)
		{
			this.SendPropertyChanging();
			entity.Drink = null;
		}
		
		private void attach_Pictures(Picture entity)
		{
			this.SendPropertyChanging();
			entity.Drink = this;
		}
		
		private void detach_Pictures(Picture entity)
		{
			this.SendPropertyChanging();
			entity.Drink = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ingredients")]
	public partial class Ingredient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_INGREDIENTS;
		
		private string _NAME;
		
		private string _QTD;
		
		private int _FK_DRINK;
		
		private EntityRef<Drink> _Drink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_INGREDIENTSChanging(int value);
    partial void OnPK_INGREDIENTSChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnQTDChanging(string value);
    partial void OnQTDChanged();
    partial void OnFK_DRINKChanging(int value);
    partial void OnFK_DRINKChanged();
    #endregion
		
		public Ingredient()
		{
			this._Drink = default(EntityRef<Drink>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_INGREDIENTS", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_INGREDIENTS
		{
			get
			{
				return this._PK_INGREDIENTS;
			}
			set
			{
				if ((this._PK_INGREDIENTS != value))
				{
					this.OnPK_INGREDIENTSChanging(value);
					this.SendPropertyChanging();
					this._PK_INGREDIENTS = value;
					this.SendPropertyChanged("PK_INGREDIENTS");
					this.OnPK_INGREDIENTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTD", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string QTD
		{
			get
			{
				return this._QTD;
			}
			set
			{
				if ((this._QTD != value))
				{
					this.OnQTDChanging(value);
					this.SendPropertyChanging();
					this._QTD = value;
					this.SendPropertyChanged("QTD");
					this.OnQTDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_DRINK", DbType="Int NOT NULL")]
		public int FK_DRINK
		{
			get
			{
				return this._FK_DRINK;
			}
			set
			{
				if ((this._FK_DRINK != value))
				{
					if (this._Drink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_DRINKChanging(value);
					this.SendPropertyChanging();
					this._FK_DRINK = value;
					this.SendPropertyChanged("FK_DRINK");
					this.OnFK_DRINKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drink_Ingredient", Storage="_Drink", ThisKey="FK_DRINK", OtherKey="PK_DRINK", IsForeignKey=true)]
		public Drink Drink
		{
			get
			{
				return this._Drink.Entity;
			}
			set
			{
				Drink previousValue = this._Drink.Entity;
				if (((previousValue != value) 
							|| (this._Drink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Drink.Entity = null;
						previousValue.Ingredients.Remove(this);
					}
					this._Drink.Entity = value;
					if ((value != null))
					{
						value.Ingredients.Add(this);
						this._FK_DRINK = value.PK_DRINK;
					}
					else
					{
						this._FK_DRINK = default(int);
					}
					this.SendPropertyChanged("Drink");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Likes")]
	public partial class Like : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_LIKE;
		
		private int _FK_DRINK;
		
		private int _FK_PROFILE;
		
		private EntityRef<Drink> _Drink;
		
		private EntityRef<Profile> _Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_LIKEChanging(int value);
    partial void OnPK_LIKEChanged();
    partial void OnFK_DRINKChanging(int value);
    partial void OnFK_DRINKChanged();
    partial void OnFK_PROFILEChanging(int value);
    partial void OnFK_PROFILEChanged();
    #endregion
		
		public Like()
		{
			this._Drink = default(EntityRef<Drink>);
			this._Profile = default(EntityRef<Profile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_LIKE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_LIKE
		{
			get
			{
				return this._PK_LIKE;
			}
			set
			{
				if ((this._PK_LIKE != value))
				{
					this.OnPK_LIKEChanging(value);
					this.SendPropertyChanging();
					this._PK_LIKE = value;
					this.SendPropertyChanged("PK_LIKE");
					this.OnPK_LIKEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_DRINK", DbType="Int NOT NULL")]
		public int FK_DRINK
		{
			get
			{
				return this._FK_DRINK;
			}
			set
			{
				if ((this._FK_DRINK != value))
				{
					if (this._Drink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_DRINKChanging(value);
					this.SendPropertyChanging();
					this._FK_DRINK = value;
					this.SendPropertyChanged("FK_DRINK");
					this.OnFK_DRINKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_PROFILE", DbType="Int NOT NULL")]
		public int FK_PROFILE
		{
			get
			{
				return this._FK_PROFILE;
			}
			set
			{
				if ((this._FK_PROFILE != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_PROFILEChanging(value);
					this.SendPropertyChanging();
					this._FK_PROFILE = value;
					this.SendPropertyChanged("FK_PROFILE");
					this.OnFK_PROFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drink_Like", Storage="_Drink", ThisKey="FK_DRINK", OtherKey="PK_DRINK", IsForeignKey=true)]
		public Drink Drink
		{
			get
			{
				return this._Drink.Entity;
			}
			set
			{
				Drink previousValue = this._Drink.Entity;
				if (((previousValue != value) 
							|| (this._Drink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Drink.Entity = null;
						previousValue.Likes1.Remove(this);
					}
					this._Drink.Entity = value;
					if ((value != null))
					{
						value.Likes1.Add(this);
						this._FK_DRINK = value.PK_DRINK;
					}
					else
					{
						this._FK_DRINK = default(int);
					}
					this.SendPropertyChanged("Drink");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Like", Storage="_Profile", ThisKey="FK_PROFILE", OtherKey="PK_PROFILE", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.Likes.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.Likes.Add(this);
						this._FK_PROFILE = value.PK_PROFILE;
					}
					else
					{
						this._FK_PROFILE = default(int);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Picture")]
	public partial class Picture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_PICTURE;
		
		private string _URL_IMAGE;
		
		private int _FK_DRINK;
		
		private EntityRef<Drink> _Drink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_PICTUREChanging(int value);
    partial void OnPK_PICTUREChanged();
    partial void OnURL_IMAGEChanging(string value);
    partial void OnURL_IMAGEChanged();
    partial void OnFK_DRINKChanging(int value);
    partial void OnFK_DRINKChanged();
    #endregion
		
		public Picture()
		{
			this._Drink = default(EntityRef<Drink>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_PICTURE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_PICTURE
		{
			get
			{
				return this._PK_PICTURE;
			}
			set
			{
				if ((this._PK_PICTURE != value))
				{
					this.OnPK_PICTUREChanging(value);
					this.SendPropertyChanging();
					this._PK_PICTURE = value;
					this.SendPropertyChanged("PK_PICTURE");
					this.OnPK_PICTUREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL_IMAGE", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string URL_IMAGE
		{
			get
			{
				return this._URL_IMAGE;
			}
			set
			{
				if ((this._URL_IMAGE != value))
				{
					this.OnURL_IMAGEChanging(value);
					this.SendPropertyChanging();
					this._URL_IMAGE = value;
					this.SendPropertyChanged("URL_IMAGE");
					this.OnURL_IMAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_DRINK", DbType="Int NOT NULL")]
		public int FK_DRINK
		{
			get
			{
				return this._FK_DRINK;
			}
			set
			{
				if ((this._FK_DRINK != value))
				{
					if (this._Drink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_DRINKChanging(value);
					this.SendPropertyChanging();
					this._FK_DRINK = value;
					this.SendPropertyChanged("FK_DRINK");
					this.OnFK_DRINKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Drink_Picture", Storage="_Drink", ThisKey="FK_DRINK", OtherKey="PK_DRINK", IsForeignKey=true)]
		public Drink Drink
		{
			get
			{
				return this._Drink.Entity;
			}
			set
			{
				Drink previousValue = this._Drink.Entity;
				if (((previousValue != value) 
							|| (this._Drink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Drink.Entity = null;
						previousValue.Pictures.Remove(this);
					}
					this._Drink.Entity = value;
					if ((value != null))
					{
						value.Pictures.Add(this);
						this._FK_DRINK = value.PK_DRINK;
					}
					else
					{
						this._FK_DRINK = default(int);
					}
					this.SendPropertyChanged("Drink");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Preferences")]
	public partial class Preference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_PREFERENCES;
		
		private int _FK_DRINK;
		
		private int _FK_PROFILE;
		
		private EntityRef<Profile> _Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_PREFERENCESChanging(int value);
    partial void OnPK_PREFERENCESChanged();
    partial void OnFK_DRINKChanging(int value);
    partial void OnFK_DRINKChanged();
    partial void OnFK_PROFILEChanging(int value);
    partial void OnFK_PROFILEChanged();
    #endregion
		
		public Preference()
		{
			this._Profile = default(EntityRef<Profile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_PREFERENCES", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_PREFERENCES
		{
			get
			{
				return this._PK_PREFERENCES;
			}
			set
			{
				if ((this._PK_PREFERENCES != value))
				{
					this.OnPK_PREFERENCESChanging(value);
					this.SendPropertyChanging();
					this._PK_PREFERENCES = value;
					this.SendPropertyChanged("PK_PREFERENCES");
					this.OnPK_PREFERENCESChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_DRINK", DbType="Int NOT NULL")]
		public int FK_DRINK
		{
			get
			{
				return this._FK_DRINK;
			}
			set
			{
				if ((this._FK_DRINK != value))
				{
					this.OnFK_DRINKChanging(value);
					this.SendPropertyChanging();
					this._FK_DRINK = value;
					this.SendPropertyChanged("FK_DRINK");
					this.OnFK_DRINKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_PROFILE", DbType="Int NOT NULL")]
		public int FK_PROFILE
		{
			get
			{
				return this._FK_PROFILE;
			}
			set
			{
				if ((this._FK_PROFILE != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_PROFILEChanging(value);
					this.SendPropertyChanging();
					this._FK_PROFILE = value;
					this.SendPropertyChanged("FK_PROFILE");
					this.OnFK_PROFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Preference", Storage="_Profile", ThisKey="FK_PROFILE", OtherKey="PK_PROFILE", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.Preferences.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.Preferences.Add(this);
						this._FK_PROFILE = value.PK_PROFILE;
					}
					else
					{
						this._FK_PROFILE = default(int);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profile")]
	public partial class Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_PROFILE;
		
		private string _FACEBOOK_ID;
		
		private string _NAME;
		
		private string _URL_IMAGE;
		
		private string _DEVICE_ID;
		
		private int _OS_ID;
		
		private EntitySet<Address> _Addresses;
		
		private EntitySet<Drink> _Drinks;
		
		private EntitySet<Like> _Likes;
		
		private EntitySet<Preference> _Preferences;
		
		private EntitySet<Share> _Shares;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_PROFILEChanging(int value);
    partial void OnPK_PROFILEChanged();
    partial void OnFACEBOOK_IDChanging(string value);
    partial void OnFACEBOOK_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnURL_IMAGEChanging(string value);
    partial void OnURL_IMAGEChanged();
    partial void OnDEVICE_IDChanging(string value);
    partial void OnDEVICE_IDChanged();
    partial void OnOS_IDChanging(int value);
    partial void OnOS_IDChanged();
    #endregion
		
		public Profile()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._Drinks = new EntitySet<Drink>(new Action<Drink>(this.attach_Drinks), new Action<Drink>(this.detach_Drinks));
			this._Likes = new EntitySet<Like>(new Action<Like>(this.attach_Likes), new Action<Like>(this.detach_Likes));
			this._Preferences = new EntitySet<Preference>(new Action<Preference>(this.attach_Preferences), new Action<Preference>(this.detach_Preferences));
			this._Shares = new EntitySet<Share>(new Action<Share>(this.attach_Shares), new Action<Share>(this.detach_Shares));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_PROFILE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_PROFILE
		{
			get
			{
				return this._PK_PROFILE;
			}
			set
			{
				if ((this._PK_PROFILE != value))
				{
					this.OnPK_PROFILEChanging(value);
					this.SendPropertyChanging();
					this._PK_PROFILE = value;
					this.SendPropertyChanged("PK_PROFILE");
					this.OnPK_PROFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACEBOOK_ID", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FACEBOOK_ID
		{
			get
			{
				return this._FACEBOOK_ID;
			}
			set
			{
				if ((this._FACEBOOK_ID != value))
				{
					this.OnFACEBOOK_IDChanging(value);
					this.SendPropertyChanging();
					this._FACEBOOK_ID = value;
					this.SendPropertyChanged("FACEBOOK_ID");
					this.OnFACEBOOK_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL_IMAGE", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string URL_IMAGE
		{
			get
			{
				return this._URL_IMAGE;
			}
			set
			{
				if ((this._URL_IMAGE != value))
				{
					this.OnURL_IMAGEChanging(value);
					this.SendPropertyChanging();
					this._URL_IMAGE = value;
					this.SendPropertyChanged("URL_IMAGE");
					this.OnURL_IMAGEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEVICE_ID", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DEVICE_ID
		{
			get
			{
				return this._DEVICE_ID;
			}
			set
			{
				if ((this._DEVICE_ID != value))
				{
					this.OnDEVICE_IDChanging(value);
					this.SendPropertyChanging();
					this._DEVICE_ID = value;
					this.SendPropertyChanged("DEVICE_ID");
					this.OnDEVICE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OS_ID", DbType="Int NOT NULL")]
		public int OS_ID
		{
			get
			{
				return this._OS_ID;
			}
			set
			{
				if ((this._OS_ID != value))
				{
					this.OnOS_IDChanging(value);
					this.SendPropertyChanging();
					this._OS_ID = value;
					this.SendPropertyChanged("OS_ID");
					this.OnOS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Address", Storage="_Addresses", ThisKey="PK_PROFILE", OtherKey="FK_PROFILE")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Drink", Storage="_Drinks", ThisKey="PK_PROFILE", OtherKey="PK_PROFILE")]
		public EntitySet<Drink> Drinks
		{
			get
			{
				return this._Drinks;
			}
			set
			{
				this._Drinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Like", Storage="_Likes", ThisKey="PK_PROFILE", OtherKey="FK_PROFILE")]
		public EntitySet<Like> Likes
		{
			get
			{
				return this._Likes;
			}
			set
			{
				this._Likes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Preference", Storage="_Preferences", ThisKey="PK_PROFILE", OtherKey="FK_PROFILE")]
		public EntitySet<Preference> Preferences
		{
			get
			{
				return this._Preferences;
			}
			set
			{
				this._Preferences.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Share", Storage="_Shares", ThisKey="PK_PROFILE", OtherKey="FK_PROFILE")]
		public EntitySet<Share> Shares
		{
			get
			{
				return this._Shares;
			}
			set
			{
				this._Shares.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void attach_Drinks(Drink entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_Drinks(Drink entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void attach_Likes(Like entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_Likes(Like entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void attach_Preferences(Preference entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_Preferences(Preference entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
		
		private void attach_Shares(Share entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_Shares(Share entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Shares")]
	public partial class Share : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PK_SHARE;
		
		private int _FK_DRINK;
		
		private int _FK_PROFILE;
		
		private EntityRef<Profile> _Profile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPK_SHAREChanging(int value);
    partial void OnPK_SHAREChanged();
    partial void OnFK_DRINKChanging(int value);
    partial void OnFK_DRINKChanged();
    partial void OnFK_PROFILEChanging(int value);
    partial void OnFK_PROFILEChanged();
    #endregion
		
		public Share()
		{
			this._Profile = default(EntityRef<Profile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PK_SHARE", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PK_SHARE
		{
			get
			{
				return this._PK_SHARE;
			}
			set
			{
				if ((this._PK_SHARE != value))
				{
					this.OnPK_SHAREChanging(value);
					this.SendPropertyChanging();
					this._PK_SHARE = value;
					this.SendPropertyChanged("PK_SHARE");
					this.OnPK_SHAREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_DRINK", DbType="Int NOT NULL")]
		public int FK_DRINK
		{
			get
			{
				return this._FK_DRINK;
			}
			set
			{
				if ((this._FK_DRINK != value))
				{
					this.OnFK_DRINKChanging(value);
					this.SendPropertyChanging();
					this._FK_DRINK = value;
					this.SendPropertyChanged("FK_DRINK");
					this.OnFK_DRINKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_PROFILE", DbType="Int NOT NULL")]
		public int FK_PROFILE
		{
			get
			{
				return this._FK_PROFILE;
			}
			set
			{
				if ((this._FK_PROFILE != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFK_PROFILEChanging(value);
					this.SendPropertyChanging();
					this._FK_PROFILE = value;
					this.SendPropertyChanged("FK_PROFILE");
					this.OnFK_PROFILEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_Share", Storage="_Profile", ThisKey="FK_PROFILE", OtherKey="PK_PROFILE", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.Shares.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.Shares.Add(this);
						this._FK_PROFILE = value.PK_PROFILE;
					}
					else
					{
						this._FK_PROFILE = default(int);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
